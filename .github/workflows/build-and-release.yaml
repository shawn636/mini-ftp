name: Build, Push, and Release

on:
    workflow_run:
        workflows:
            - Test on Pull Request and Push
        types:
            - completed
    pull_request: # TEMPORARY: Remove this block after testing
        branches:
            - main

env:
    IMAGE_NAME: shawn636/mini-ftp
    MINORS_TO_KEEP: 3

jobs:
    build-and-release:
        runs-on: ubuntu-latest

        if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'pull_request' }}

        steps:
            - name: Checkout Repository
              uses: actions/checkout@v4
              with:
                  ref: ${{ github.event.pull_request.head.ref || github.ref }}

            # Bump Version
            - name: Bump Version (if triggered by bot or cron)
              id: version_bump
              if: ${{ github.actor == 'dependabot[bot]' || github.event_name == 'schedule' }}
              run: |
                  VERSION_FILE="VERSION"
                  if [ ! -f "$VERSION_FILE" ]; then
                    echo "1.0.0" > $VERSION_FILE
                  fi
                  current_version=$(cat $VERSION_FILE)
                  IFS='.' read -r major minor patch <<< "$current_version"

                  # Default to patch bump
                  new_patch=$((patch + 1))
                  new_version="$major.$minor.$new_patch"

                  echo $new_version > $VERSION_FILE
                  echo "Exporting VERSION=${new_version}"
                  echo "VERSION=${new_version}" >> $GITHUB_ENV

            # Debug Version (ensure it's loaded correctly)
            - name: Debug Version
              run: |
                  VERSION=$(cat VERSION)
                  echo "VERSION is: $VERSION"

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v2
              with:
                  driver: docker-container
                  buildkitd-flags: --allow-insecure-entitlement security.insecure

            - name: Cache Docker Buildx
              uses: actions/cache@v3
              with:
                  path: /tmp/.buildx-cache
                  key: docker-buildx-cache-${{ runner.os }}-${{ github.sha }}
                  restore-keys: |
                      docker-buildx-cache-${{ runner.os }}-

            - name: Build and Push Docker Image
              run: |
                  VERSION=$(cat VERSION)
                  echo "Building image with version: $VERSION"
                  docker buildx build --push \
                    --platform linux/amd64,linux/arm64 \
                    --tag ${{ env.IMAGE_NAME }}:$VERSION \
                    --cache-to type=inline \
                    --cache-from type=registry,ref=${{ env.IMAGE_NAME }}:build-cache \
                    .

            - name: Cleanup Old Docker Images
              run: |
                  old_versions=$(docker images ${{ env.IMAGE_NAME }} --format '{{.Tag}}' | sort -r | tail -n +${{ env.MINORS_TO_KEEP }})
                  for version in $old_versions; do
                      docker rmi ${{ env.IMAGE_NAME }}:$version || true
                  done

            - name: Finalize Release
              run: echo "Successfully released version $(cat VERSION)"
